container:
  image: golang:latest

env:
  GOPROXY: https://proxy.golang.org

task:
  container:
    image: golangci/golangci-lint:latest
  name: Lint
  script: golangci-lint run -v --out-format json > golangci.json
  always:
    artifacts:
      path: golangci.json
      type: text/json
      format: golangci

task:
  name: Test (Linux)
  alias: test-linux
  modules_cache:
    fingerprint_script: cat go.sum
    folder: $GOPATH/pkg/mod
  test_script:
    - apt-get update
    - apt-get install -y zsh
    - go test ./...

docker_builder:
  name: Test (Windows)
  alias: test-windows
  platform: windows
  os_version: 2019
  test_script:
    - choco install -y golang
    - refreshenv
    - md C:\Windows\system32\config\systemprofile\AppData\Local\Temp
    - go test ./...

task:
  name: Test (macOS)
  alias: test-macos
  osx_instance:
    image: catalina-base
  test_script:
    - brew install go
    - go test ./...

task:
  name: Test (FreeBSD)
  alias: test-freebsd
  freebsd_instance:
    image_family: freebsd-12-2
  test_script:
    - pkg install -y zsh go
    - go test ./...

docker_builder:
  name: Test Docker Build
  only_if: "changesInclude('Dockerfile')"
  build_script: docker build .

task:
  name: Release (Dry Run)
  only_if: $CIRRUS_TAG == ''
  depends_on:
    - test-linux
    - test-windows
    - test-macos
    - test-freebsd
  container:
    image: golang:latest
  install_script: curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh
  release_script: ./bin/goreleaser build --snapshot
  binaries_artifacts:
    path: "dist/agent_*/agent*"

task:
  name: Release
  only_if: $CIRRUS_TAG != ''
  depends_on:
    - test-linux
    - test-windows
    - test-macos
    - Test Docker Build
  env:
    GITHUB_TOKEN: ENCRYPTED[!98ace8259c6024da912c14d5a3c5c6aac186890a8d4819fad78f3e0c41a4e0cd3a2537dd6e91493952fb056fa434be7c!]
  container:
    image: golang:latest
  install_script: curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh
  release_script: ./bin/goreleaser

apple_silicon: &APPLE_SILICON_BUILD
  osx_instance:
    image: catalina-xcode
  env:
    GOPATH: $HOME/go
    PATH: $GOPATH/bin:$PATH
  install_script:
    - brew update
    - brew install go
  gotip_script:
    - go get golang.org/dl/gotip
    - gotip download
    - gotip version
  build_script:
    - CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 gotip build -o agent-darwin-arm64 cmd/agent/main.go

task:
  name: Release Apple Silicon (Dry Run)
  only_if: $CIRRUS_TAG == ''
  depends_on:
    - test-linux
    - test-windows
    - test-macos
    - test-freebsd
  <<: *APPLE_SILICON_BUILD
  binary_artifacts:
    path: agent-darwin-arm64

task:
  name: Release Apple Silicon
  only_if: $CIRRUS_RELEASE != ''
  depends_on: Release
  env:
    GITHUB_TOKEN: ENCRYPTED[!98ace8259c6024da912c14d5a3c5c6aac186890a8d4819fad78f3e0c41a4e0cd3a2537dd6e91493952fb056fa434be7c!]
  <<: *APPLE_SILICON_BUILD
  upload_script: |
    curl -X POST \
        --data-binary @agent-darwin-arm64 \
        --header "Authorization: token $GITHUB_TOKEN" \
        --header "Content-Type: application/octet-stream" \
        https://uploads.github.com/repos/$CIRRUS_REPO_FULL_NAME/releases/$CIRRUS_RELEASE/assets?name=agent-darwin-arm64
